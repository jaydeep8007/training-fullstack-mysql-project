export const msg = {
  common: {
    unexpectedError: '¡Ups! Algo salió mal. Por favor, inténtalo de nuevo más tarde.',
    unauthorized: 'No estás autorizado para realizar esta acción.',
    invalidToken: 'Sesión expirada o token inválido. Por favor, inicia sesión de nuevo.',
    tokenNotFound: 'Token no encontrado',
    serverError: 'Error interno del servidor. Por favor, contacta con soporte.',
    invalidId: 'No se encontró ningún registro con el ID proporcionado.',
    fetchSuccess: 'Datos obtenidos con éxito.',
    createSuccess: 'Registro creado exitosamente.',
    updateSuccess: 'Registro actualizado exitosamente.',
    deleteSuccess: 'Registro eliminado exitosamente.',
    deleteFailed: 'No se pudo eliminar el registro.',
    notFound: 'El recurso solicitado no fue encontrado.',
    alreadyExists: 'Ya existe un registro similar.',
    invalidInput: 'Validación de entrada fallida. Verifica tus datos.',
    missingFields: 'Faltan algunos campos obligatorios.',
    invalidEmail: 'Por favor, proporciona una dirección de correo electrónico válida.',
    invalidPhone: 'Formato de número telefónico inválido.',
    phoneExists: 'El número telefónico ya existe.',
    invalidDate: 'El formato de fecha no es válido.',
    invalidPassword: 'La contraseña no cumple con los requisitos de seguridad.',
    passwordMismatch: 'Las contraseñas no coinciden.',
    emailAlreadyExists: 'Este correo electrónico ya está registrado.',
    usernameAlreadyExists: 'Este nombre de usuario ya está en uso.',
    requiredAllFields: 'Por favor, completa todos los campos obligatorios.',
    languageInvalid: 'Código de idioma inválido.',
    languageUpdateSuccess: 'Configuración de idioma actualizada con éxito.',
    noChanges: 'No se detectaron cambios en los datos proporcionados.',
    resetLinkSend: 'Enlace de restablecimiento enviado a tu correo.',
  },
  admin: {
    createSuccess: 'Administrador creado exitosamente.',
    fetchSuccess: 'Administradores obtenidos con éxito.',
    updateFailed: 'No se pudo actualizar los detalles del administrador.',
    fetchFailed: 'No se pudieron obtener los datos del administrador.',
    updateSuccess: 'Administrador actualizado con éxito.',
    deleteSuccess: 'Administrador eliminado exitosamente.',
    notFound: 'Administrador no encontrado.',
    emailExists: 'Ya existe un administrador con este correo.',
    phoneExists: 'Ya existe un administrador con este número.',
    invalidId: 'ID de administrador inválido.',
  },
  customer: {
    createSuccess: 'Cliente registrado exitosamente.',
    fetchSuccess: 'Datos del cliente obtenidos con éxito.',
    fetchFailed: 'No se pudieron obtener los datos del cliente.',
    updateSuccess: 'Detalles del cliente actualizados.',
    updateFailed: 'No se pudieron actualizar los detalles del cliente.',
    deleteSuccess: 'Cliente eliminado exitosamente.',
    deleteFailed: 'No se pudo eliminar al cliente.',
    notFound: 'Cliente no encontrado.',
    idNotFound: 'No se encontró un cliente con el ID proporcionado.',
    emailAlreadyExists: 'Ya existe un cliente con este correo.',
  },
  auth: {
    signupSuccess: 'Registro de cliente exitoso.',
    loginSuccess: 'Inicio de sesión exitoso.',
    logoutSucces: 'Cierre de sesión exitoso.',
    registerSuccess: 'Registro exitoso.',
    customerNotFound: 'Cliente no encontrado.',
    invalidPassword: 'Contraseña inválida.',
    emailExists: 'El correo electrónico ya existe.',
    phoneExists: 'El número de teléfono ya existe.',
    passwordMismatch: 'Las contraseñas no coinciden.',
    resetTokenGenerated: 'Token de restablecimiento generado con éxito.',
    invalidResetToken: 'Token de restablecimiento inválido o expirado.',
    passwordResetSuccess: 'Contraseña restablecida con éxito.',
    profileFetchSuccess: 'Perfil obtenido con éxito.',
    resetTokenSent: 'Token de restablecimiento enviado a tu correo.',
  },
  employee: {
    createSuccess: 'Empleado creado exitosamente.',
    fetchSuccess: 'Empleados obtenidos con éxito.',
    emailExists: 'El correo del empleado ya existe.',
    updateSuccess: 'Empleado actualizado exitosamente.',
    deleteSuccess: 'Empleado eliminado exitosamente.',
    notFound: 'Empleado no encontrado.',
    emailAlreadyExists: 'Ya existe un empleado con este correo.',
    phoneAlreadyExists: 'Ya existe un empleado con este número.',
    invalidId: 'ID de empleado inválido.',
  },
  job: {
    createSuccess: 'Trabajo publicado exitosamente.',
    fetchSuccess: 'Detalles del trabajo obtenidos con éxito.',
    updateSuccess: 'Detalles del trabajo actualizados.',
    deleteSuccess: 'Trabajo eliminado exitosamente.',
    notFound: 'Trabajo no encontrado.',
    skuExists: (sku: string) => `El SKU del trabajo '${sku}' ya existe.`,
    invalidName: 'El nombre del trabajo debe tener entre 2 y 50 caracteres.',
  },
  employeeJob: {
    assignSuccess: 'Trabajo asignado a empleado(s) exitosamente.',
    fetchSuccess: 'Asignaciones de trabajo obtenidas con éxito.',
  },
  globalConfig: {
    notFound: 'Configuración global no encontrada.',
    fetchSuccess: 'Configuración global obtenida exitosamente.',
    fetchAllSuccess: 'Todas las configuraciones globales obtenidas.',
  },
  validation: {
    firstName: {
      required: 'El nombre es obligatorio.',
      max: 'Se permiten máximo 50 caracteres.',
      regex: 'El nombre no debe contener números ni caracteres especiales.',
    },
    lastName: {
      required: 'El apellido es obligatorio.',
      max: 'Se permiten máximo 50 caracteres.',
      regex: 'El apellido no debe contener números ni caracteres especiales.',
    },
    email: {
      invalid: 'Dirección de correo inválida.',
      required: 'El correo electrónico es obligatorio.',
      exists: 'El correo ya existe.',
    },
    phone: {
      exactLength: 'El número debe tener exactamente 10 dígitos.',
      onlyDigits: 'El número debe contener solo dígitos.',
      exists: 'El número ya existe.',
    },
    password: {
      min: 'La contraseña debe tener al menos 8 caracteres.',
      uppercase: 'Debe contener al menos una letra mayúscula.',
      lowercase: 'Debe contener al menos una letra minúscula.',
      number: 'Debe contener al menos un número.',
      specialChar: 'Debe contener al menos un carácter especial.',
      mismatch: 'Las contraseñas no coinciden.',
      newRequired: 'La nueva contraseña es obligatoria.',
      pattern: 'Debe incluir mayúscula, minúscula, número y carácter especial.',
    },
    confirmPassword: {
      required: 'Confirmar contraseña es obligatorio.',
      min: 'Debe tener al menos 8 caracteres.',
    },
    token: {
      required: 'El token de restablecimiento es obligatorio.',
    },
    status: {
      enum: 'El estado debe ser: active, inactive, restricted o blocked.',
    },
    job: {
      nameMin: 'El nombre del trabajo debe tener al menos 2 caracteres.',
      nameMax: 'El nombre del trabajo debe tener máximo 50 caracteres.',
      skuRequired: 'El SKU del trabajo es obligatorio.',
      skuMax: 'El SKU debe tener máximo 20 caracteres.',
      categoryMin: 'La categoría debe tener al menos 2 caracteres.',
      categoryMax: 'La categoría debe tener máximo 50 caracteres.',
      skuExists: (sku: string) => `El SKU del trabajo '${sku}' ya existe.`,
    },
    employeeJob: {
      empIdType: 'emp_id debe ser un número.',
      empIdRequired: 'emp_id es obligatorio.',
      empIdNotFound: 'El ID del empleado no existe.',
      jobIdType: 'job_id debe ser un número.',
      jobIdRequired: 'job_id es obligatorio.',
      jobIdNotFound: 'El ID del trabajo no existe.',
      empIdsEmpty: 'El array emp_ids no puede estar vacío.',
    },
  },
};
