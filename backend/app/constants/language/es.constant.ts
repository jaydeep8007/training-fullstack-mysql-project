export const msg = {
  common: {
    unexpectedError: '¡Ups! Algo salió mal. Por favor, inténtalo de nuevo más tarde.',
    unauthorized: 'No estás autorizado para realizar esta acción.',
    invalidToken: 'Sesión expirada o token inválido. Por favor, inicia sesión de nuevo.',
    tokenNotFound: 'Token no encontrado',
    serverError: 'Error interno del servidor. Contacta al soporte.',
    invalidId: 'No se encontró ningún registro coincidente para el ID proporcionado.',
    fetchSuccess: 'Datos recuperados con éxito.',
    createSuccess: 'Registro creado con éxito.',
    updateSuccess: 'Registro actualizado con éxito.',
    deleteSuccess: 'Registro eliminado con éxito.',
    deleteFailed: 'No se pudo eliminar el registro.',
    notFound: 'No se encontró el recurso solicitado.',
    alreadyExists: 'Ya existe un registro similar.',
    invalidInput: 'Validación de entrada fallida. Verifica tus datos.',
    missingFields: 'Faltan algunos campos obligatorios.',
    invalidEmail: 'Por favor proporciona una dirección de correo válida.',
    invalidPhone: 'El formato del número de teléfono no es válido.',
    phoneExists: 'El número de teléfono ya existe.',
    invalidDate: 'El formato de fecha no es válido.',
    invalidPassword: 'La contraseña no cumple con los requisitos de seguridad.',
    passwordMismatch: 'Las contraseñas no coinciden.',
    emailAlreadyExists: 'Este correo electrónico ya está registrado.',
    usernameAlreadyExists: 'Este nombre de usuario ya está en uso.',
    requiredAllFields: 'Por favor completa todos los campos obligatorios.',
    languageInvalid: 'Código de idioma no válido.',
    languageUpdateSuccess: 'Configuración de idioma actualizada con éxito.',
        noChanges: 'No se detectaron cambios en los datos proporcionados.',
        resetLinkSend: 'Enlace de restablecimiento enviado a tu correo.',
  },

  customer: {
    createSuccess: 'Cliente registrado con éxito.',
    fetchSuccess: 'Datos del cliente recuperados con éxito.',
    fetchFailed: 'No se pudieron obtener los datos del cliente.',
    updateSuccess: 'Datos del cliente actualizados.',
    updateFailed: 'No se pudieron actualizar los datos del cliente.',
    deleteSuccess: 'Cliente eliminado con éxito.',
    deleteFailed: 'No se pudo eliminar al cliente.',
    notFound: 'Cliente no encontrado.',
    idNotFound: 'No se encontró un cliente con el ID proporcionado.',
    emailAlreadyExists: 'Ya existe un cliente con este correo electrónico.',
  },

  auth: {
    signupSuccess: 'Registro de cliente exitoso.',
    loginSuccess: 'Inicio de sesión exitoso.',
    logoutSucces: 'Cierre de sesión exitoso',
    registerSuccess: 'Registro exitoso.',
    customerNotFound: 'Cliente no encontrado.',
    invalidPassword: 'Contraseña inválida.',
    emailExists: 'El correo electrónico ya existe.',
    phoneExists: 'El número de teléfono ya existe.',
    passwordMismatch: 'Las contraseñas no coinciden.',
    resetTokenGenerated: 'Token de restablecimiento generado con éxito.',
    invalidResetToken: 'Token de restablecimiento inválido o expirado.',
    passwordResetSuccess: 'Contraseña restablecida con éxito.',
    profileFetchSuccess: 'Perfil recuperado con éxito',
    resetTokenSent: 'El token de restablecimiento de contraseña ha sido enviado a tu correo.',
  },

  employee: {
    createSuccess: 'Empleado creado con éxito.',
    fetchSuccess: 'Empleados recuperados con éxito.',
    emailExists: 'El correo del empleado ya existe.',
    updateSuccess: 'Empleado actualizado con éxito.',
    deleteSuccess: 'Empleado eliminado con éxito.',
    notFound: 'Empleado no encontrado.',
    emailAlreadyExists: 'Ya existe un empleado con este correo.',
    phoneAlreadyExists: 'Ya existe un empleado con este número de teléfono.',
    invalidId: 'ID de empleado inválido.',
  },

  job: {
    createSuccess: 'Trabajo publicado con éxito.',
    fetchSuccess: 'Detalles del trabajo recuperados con éxito.',
    updateSuccess: 'Detalles del trabajo actualizados.',
    deleteSuccess: 'Trabajo eliminado con éxito.',
    notFound: 'Trabajo no encontrado.',
    skuExists: (sku: string) => `El SKU del trabajo '${sku}' ya existe.`,
    invalidName: 'El nombre del trabajo debe tener entre 2 y 50 caracteres.',
  },

  employeeJob: {
    assignSuccess: 'Trabajo asignado a los empleados con éxito.',
    fetchSuccess: 'Asignaciones de trabajo recuperadas con éxito.',
  },

  globalConfig: {
    notFound: 'Configuración global no encontrada.',
    fetchSuccess: 'Configuración global recuperada con éxito.',
  },

  validation: {
    firstName: {
      required: 'El nombre es obligatorio',
      max: 'Se permiten hasta 50 caracteres como máximo',
      regex: 'El nombre no debe contener números ni caracteres especiales',
    },
    lastName: {
      required: 'El apellido es obligatorio',
      max: 'Se permiten hasta 50 caracteres como máximo',
      regex: 'El apellido no debe contener números ni caracteres especiales',
    },
    email: {
      invalid: 'Correo electrónico inválido',
      required: 'El correo es obligatorio',
      exists: 'El correo ya existe',
    },
    phone: {
      exactLength: 'El número debe tener exactamente 10 dígitos',
      onlyDigits: 'El número debe contener solo dígitos',
      exists: 'El número ya existe',
    },
    password: {
      min: 'La contraseña debe tener al menos 8 caracteres',
      uppercase: 'La contraseña debe contener al menos una letra mayúscula',
      lowercase: 'La contraseña debe contener al menos una letra minúscula',
      number: 'La contraseña debe contener al menos un número',
      specialChar: 'La contraseña debe contener al menos un carácter especial',
      mismatch: 'Las contraseñas no coinciden',
      newRequired: 'La nueva contraseña es obligatoria',
      pattern: 'La contraseña debe incluir una mayúscula, una minúscula, un número y un carácter especial',
    },
    confirmPassword: {
      required: 'La confirmación de la contraseña es obligatoria',
      min: 'La confirmación debe tener al menos 8 caracteres',
    },
    token: {
      required: 'El token de restablecimiento es obligatorio',
    },
    status: {
      enum: 'El estado debe ser: activo, inactivo, restringido o bloqueado',
    },
    job: {
      nameMin: 'El nombre del trabajo debe tener al menos 2 caracteres',
      nameMax: 'El nombre del trabajo debe tener como máximo 50 caracteres',
      skuRequired: 'El SKU del trabajo es obligatorio',
      skuMax: 'El SKU del trabajo debe tener como máximo 20 caracteres',
      categoryMin: 'La categoría del trabajo debe tener al menos 2 caracteres',
      categoryMax: 'La categoría del trabajo debe tener como máximo 50 caracteres',
      skuExists: (sku: string) => `El SKU del trabajo '${sku}' ya existe`,
    },
    employeeJob: {
      empIdType: 'emp_id debe ser un número',
      empIdRequired: 'emp_id es obligatorio',
      empIdNotFound: 'El ID del empleado no existe',
      jobIdType: 'job_id debe ser un número',
      jobIdRequired: 'job_id es obligatorio',
      jobIdNotFound: 'El ID del trabajo no existe',
      empIdsEmpty: 'El array emp_ids no puede estar vacío',
    },
  },
};
